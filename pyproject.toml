# https://docs.astral.sh/uv/reference/settings/
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/

# PROJECT

[project]
name = "seismic-segmentation"
version = "0.1.0"
description = "Seismic Image Segmentation: A baseline UNet with ResNet-34 encoder and Advanced Transformer-based SAGModel (with LoRA, ViTEncoder, PromptEncoder, and MaskDecoder)"
authors = [{ name = "udapy" }]
readme = "README.md"
license = { file = "LICENSE.txt" }
keywords = ["mlops", "python", "package"]
requires-python = ">=3.9"
dependencies = [
    "torch>=1.10.0",
    "torchvision>=0.11.0",
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "scikit-learn>=1.0.0",
    "tqdm>=4.62.0",
    "segyio>=1.9.8",
    "albumentations>=1.1.0",
    "tensorboard>=2.7.0",
    "pyyaml>=6.0",
    "h5py>=3.6.0",
    "opencv-python>=4.5.0",
    "optuna>=4.2.1",
    "scikit-image>=0.24.0",
    "safetensors>=0.5.3",
]

# LINKS

[project.urls]
Homepage = "https://github.com/udapy/seismic-segmentation"
Documentation = "https://udapy.github.io/seismic-segmentation/"
Repository = "https://github.com/udapy/seismic-segmentatione"
"Bug Tracker" = "https://github.com/udapy/seismic-segmentation/issues"
Changelog = "https://github.com/udapy/seismic-segmentation/blob/main/CHANGELOG.md"

# SCRIPTS

[project.scripts]
seismic-segmentation = "seismic_segmentation.cli.main:main"

# DEPENDENCIES

[dependency-groups]
check = [
    "bandit>=1.8.3",
    "coverage>=7.6.12",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.1",
    "ruff>=0.9.9",
]
commit = ["commitizen>=4.4.1", "pre-commit>=4.1.0"]
dev = ["rust-just>=1.39.0"]
doc = ["pdoc>=15.0.1"]
notebook = ["ipykernel>=6.29.5", "nbformat>=5.10.4"]

# TOOLS

[tool.uv]
default-groups = ["check", "commit", "dev", "doc", "notebook"]

[tool.bandit]
targets = ["src"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["__main__.py"]

[tool.mypy]
pretty = true
python_version = "3.13"
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--verbosity=2"
pythonpath = ["src"]

[tool.ruff]
fix = true
indent-width = 4
line-length = 100
target-version = "py313"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D100", "D103"]

# SYSTEMS

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
